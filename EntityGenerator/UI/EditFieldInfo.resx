<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAB7fH7/obPD/8LZ7v+30uv/q8rm/5m74v+FsNj/mdLk/5/w+f+a8Pn/advr/yzA3P8pv+j/Q7/g/yrD
        7f8mtd//G7Pj/0a64f8mt9//L7TV/yev0f87uNb/QMHb/znD3v9GyOL/WdLp/2fY6f9e2OX/jd7p/6Pp
        8P+S7fH/ibm9/5iPh/+lrbX/xtju/7nT7P+iw+b/jLfb/4K41f+q8ff/hejv/2zW6f9y1Or/ZdPw/0i/
        4v9XrMT/a6zF/4e3yv9+uc7/bLDH/2Cqxf9Bk6j/HZay/xuYtP9Iscf/JrjO/z/C1v9vzdj/a9Pk/3TX
        5f9Xvsz/b8nU/5Xh5f9kgob/m5SK/56gov+/0uj/s8/q/6LC5v+NueL/k9bo/4jp8P9P2fD/b+D3/2LE
        4P+Twd3/qcfb/7rS3v+7zdj/ucfT/7K/yv+ntsP/obfE/5Kxvv9/qLn/VZCn/ziUq/89orf/QLbR/0+2
        zf9Sw9X/V8TX/1K3y/9YwdD/l9zg/y1HSv+ilYn/npya/7vO3f+wzOP/mr7g/32u1/+I2+r/eNzv/3Lh
        9f94t9T/rMjf/9Ti7f/Z4+3/zNjg/8DM0/+6xMz/tr7H/7K7w/+rtr//oLG6/6S3wP+etcL/fpup/0l8
        i/8kjKb/KJix/0Cltv8/pbz/NKfB/3rH1P9mpKH/L0NA/6WWif+clI3/qLK8/7PJ3/+ewN7/h7Xc/4jV
        7P9p1O//YqzR/7nV6f/Z4+7/4ujv/93l6f/O197/v8jR/7G8xf+qtsH/pLC4/6WvuP+kr7f/r7nB/7K+
        yP+wv8j/e5ml/yhdfP8Sa5D/GnGS/yGMqP9Prb3/d8/U/zVYUv81S0D/o5aJ/5+Uiv+SkpL/qLnK/527
        2P+Bq9L/ZKTQ/0uQxf9znsf/ydzr/+fp7//o7PP/3ePq/8bR2P+tvMf/lqe0/4+ir/+SpK//k6Or/5mk
        rv+yub//wMLK/8DFy/+nucH/aI2k/ylegv8XWoD/M4ej/4HGyv9SfHX/Mkk7/zFHN/+fk4j/nJSK/5mO
        iv+Xo63/jq3N/2yWx/9snM3/i7Lb/6nJ5P/F2ef/2+Tr/+rr9P/T3+n/p7zJ/5GntP+TpLH/jJ2m/3yM
        lP95iZL/i5ii/6yzu/++wMn/wMLJ/7W9wP+RqLT/V3ya/ydYf/8oX3//VW92/1RgVv81T0H/KEA5/6ST
        i/+kk4v/n5CL/3+Lm/93m8T/cpzO/4Wt2/+bvt//vtTn/9Th6//N2uL/0+Dq/8DV4P/D1eD/xtHZ/7W8
        w/+qrrf/pqqx/5qgpf+IlJv/lZ6n/6uvuP+xsLr/qK6z/5qqsf9piaH/OWWM/zBbfv86WG3/SVlU/zhP
        Qv8sQjn/k4SB/5GKhf+JiIn/c4uq/32k0/+BqNz/j7Xf/6rJ5v/G1uf/1eDn/8/b5//V4+z/4+vz/+Lj
        6v++vsX/lpSY/4qChv+Xj5H/r6qr/66us/+aoar/lZ+n/6Cnr/+mrrT/nKaw/3CHnP9NbpD/QmWI/zld
        dv9CWmD/N1BC/zJIO/86U1D/RWVi/1l0f/99mr7/harY/4203/+qyOf/tc7i/8zc6P/i6PD/6enz/+br
        8//W4Or/q7O6/3p8f/9YVFf/WVBT/2BXWv+FgYL/oKWn/6ess/+jp7H/nqat/6GosP+iqbH/l6au/36T
        pf9ceZf/TG2O/0hjcv82UEb/Mkk8/yBGSP8hTE7/UXN9/5W01v+avOL/qsrn/7fR5v+50eT/y9nm/+Tq
        8//m5/D/5ujw/9Xc4v+Um57/WFhc/0M+Qf85MjX/KiYq/zw9QP9ham3/jZab/5uiqP+ipKr/o6iv/56n
        rv+ep67/kZ+q/3OLoP9ad5L/Ump4/z1XTP84TkH/PVVe/zpUXP9wipn/ocHi/6bJ5v+10uf/u9Pl/8HU
        5v/Z4ur/4+ju/9zi5//28vf/7enq/8nCwP99c3L/Yllb/1BKS/9kXl3/dm9u/5mUlP+ZmZn/iY6O/5qd
        n/+ipqn/m6Oo/5yjq/+Zp63/jqCs/22GnP9cdYT/PVlS/0BTRv9FWGP/U2d0/5Ctxf+hwuL/tM/m/8fZ
        6v/N3e3/z9zp/+ns8//v7fH/9PH2//z1+f/27e3/z8G//3RnZf9AODr/Mykp/0c+Of+HeXP/yLiw/8i8
        uf+enp7/j5WY/6Klqf+lqq3/oqqv/5Wjq/+Qn6n/fZOj/2aBkP8yT0r/PU1H/z5PWv9hcoD/pL3Y/6/I
        5P/D1+v/0+Hs/9nl7v/d5u7/9/T1//v29//38/j/+fP1//ry7P/Ov7f/XFJQ/zw5Ov8pIyb/KyUi/4Bw
        Zv/ZxLb/5NTI/9bLyv+io6P/q6ys/7i6uf+tsbb/m6St/5Cfqf+Jm6r/f5am/0xgYf8+R0H/OU9V/11v
        fP+pw9z/sczn/8XX7f/Y5O7/4+v0/+ns9f/79vv//fn8//f0+P/18/b//Pfy/8m9s/9AOzr/JB8h/yYi
        Jf8gGBj/c2FX//DbzP/s3NT/29DM/9LHw//Yzsj/29PN/7a3uf+utbr/pK24/5Wks/+OoLD/Wm1x/0RF
        Qv87WmH/Smlz/5O0zv+Xt93/r8vn/8ba6//Y5e7/7O31/+fs8f/v8vj/6e3z/+np8f/79vj/6eHe/5SF
        f/9nT0X/XUU7/1VFP/+gkYf/9ePZ/+fe1//i2tf/7eDb/+3i2//o39v/xcHE/8HDxf+zusL/mqm3/4ic
        r/9ugIj/Q0hG/zdaWv89ZWf/hKe9/46w2/+Wt93/qMTl/7zR6f/d5/L/t9Dn/5y85P+gu93/s8Tf/9zf
        7//g4uz/1Nja/761sv+7sKf/yruz/+bb1v/n3d3/0dDX/97b2//n4OD/6+Lh/+Pc2v/f19f/ysrM/6y2
        v/+SorP/hZqw/19zd/85REL/M1ZQ/zdiXv95nbD/krLd/4ap1P+Mr9r/kbLa/6jI5P+Utt//hanV/4el
        x/+Mo73/p7za/7jM6f+0yun/pr/h/6e61v+2v9L/xsrX/7i/y/+eq7z/kKO5/46ku/+lt8j/09PW/9DQ
        0v+zvcP/mqm6/3WMp/9/lq3/SFpf/y48Ov8yVlb/Nlta/2GGkf+XuOD/hqrX/36k0f9ynM3/a5TD/2SK
        uv9uiKX/TFFY/zQ6Rv9QZX//lrfc/6jF7P+ivuX/pbjY/6i20v+Wprv/TVpl/0ZMVv9zfon/hJqx/3+a
        tf+tucn/qbK+/46htv95kKr/cYml/3WOn/8+Tk3/KkE8/zNYWf8uUlb/R21y/5Oz3P+Mr9r/eJzK/2uT
        xv9rlcj/Y4y+/09zmP9VZ3v/f42e/6i80f+Nq87/hajX/4ip0/+Iocb/hZu5/4GSpP9yf4j/NT1C/x4l
        Kv9EWmz/Um2N/2Z/of9wh6n/cYup/22HpP99k7H/bH2G/0lQSv8tQD7/NFxa/yxUWP9KcXX/fqbS/4at
        2v9+odH/e5/N/3uh0f90m8z/eZzH/3ufyP+0yOH/x9bj/5e00f9skbz/ZIq3/2WDrf9uiq//p7fF/8PH
        yf+cpbD/aHqP/2J6l/9ng6X/Z4Gk/2iApP9tg6f/doyu/3iPrP9PW17/Q0VC/yU1Nf9GZ1//MVda/1V3
        gf90oM7/aJTB/3WY0P+BpNP/g6XV/3ac0f9tk8j/dZrG/46v1P+dvN7/g6XQ/1yDtP9Lc6T/Unao/2iG
        sv+ctc7/sL/P/4+ftP9zjav/bous/2+Jrv9ziav/bYWm/3KJq/9vhqj/XXSV/0JRVP8zOzz/IjI4/1Nm
        YP9AVlz/bIyh/2yYxv9RdJr/UG+U/3CPu/+Hqdf/faDU/3SXyf9xlMb/d5rK/3eZx/9oi7v/UHWo/z5j
        lv9FaZ7/XHuq/3CQuP9+m77/dZO1/2mEq/9rhqr/bYeq/3SJpv90i6f/X3WV/0tkhP9Uboz/R1tj/zlH
        Tv9FTlf/S2Nj/0FVW/+Apsv/ZI+2/1BngP8zSmH/TW2T/3OUv/+Gp9n/gKPU/3uc0P91l8v/a5DD/12C
        t/9Vea//R2uh/05yqP9Zeav/Z4ay/22Nt/9tjbX/cI2z/3aPsv9yi6r/a4Wb/0Ncb/9DVWn/S2B1/0tp
        h/9TaXb/RVJa/0xXX/84ZGf/OV5i/36t0v9SdZb/O05i/zpOY/9rhqb/W32p/2mMv/+Bpdb/gKLV/3qa
        0f9vk8j/a4/G/1l9s/9NcKb/U3it/2WIuv9nibf/bY+7/3STu/94lbn/eZKy/2d+nP9CW3D/NUha/y49
        Sv9QYG7/VHST/1t2i/8/TVX/NEFJ/0Bzdv9OeHz/hq/T/2CAm/9FVmv/W3GG/2iEo/9QdKP/SXKm/2WL
        u/90l8n/epzS/3ab0f9uksr/Yoi9/1d7sP9fhLf/Y4i6/2eMuP9tj7z/c5K6/3mYvf9lgJ//O1Rz/09m
        fP9fbn3/OEdS/0dXY/9TcI//W3iO/y5FSv8yRUv/OW9y/z9vcv9+qsz/bYqh/2N1iP9ziZz/X36e/0Vq
        mv9Xeaj/bo+5/3KXwv9zmMf/dZrM/3Wazf9skcP/XoG0/2+Uxv9yl8f/b5LA/2uNuv9rjLj/ZYix/0lp
        kv88YIj/R2aG/2yCkf9XZXD/XGx5/1h1kv9ZeZD/Nk9X/0pZYP8tbW//ImJi/3Klyv96kav/dYqc/3qT
        pf9ggaL/a4+z/2+Tsf+Nq8L/qcTg/5+54P+VsNr/iKbP/4Kfyf96lMH/haLN/4Sjz/+Ancr/gJzG/4aj
        yf+Kpsj/fZ3D/2mQvP9WeqD/comc/25+iP9zgY7/UW+O/1Jyi/81VFv/S2hr/yZmZf8hYF3/eKbM/2uM
        rP9uiqL/c5Gt/4OiwP9ZfYn/N2Nk/zxoaP9igoz/kq26/6K9z/+fuc3/nbbL/6K92f+kvdn/r8jf/7DI
        4P+txNn/orrK/3WUl/9TeoH/dpuz/4mtz/97m7f/do2g/3SJnP9LcI7/V3uN/0Jqbf9KdnP/L2lf/yFe
        V/+BrML/gqbG/4mnxf99nK//UXN1/0hoaP9SaWr/XG5v/2Bzc/9OaGj/QGNg/0JkXP86WlH/PGFe/ytb
        WP8vY17/OW5q/z1tav9FamX/S2tu/0ZobP8/X2P/aYiU/5m+2f+CpcH/aYqp/0lqj/9kh5L/S3Zz/0d3
        bf88b2L/KF1S/y5fXv9PfX3/U3Z2/0VmX/9NamT/QmZm/z5fXP9SZF3/Zmpj/1NiWP9AWU//P1ZL/y1K
        O/8YQzD/EEMy/xNHOf8gUUz/PWNm/1Jzd/9WdHn/WXR2/1Vpbv9GXWD/V291/5q0wv+hv9L/i6q4/1h8
        ff89aGD/LmNW/058cP9MbF7/O2BX/zNfV/9AYlz/TWZf/0tkXf85XVb/JlVJ/ypPP/9BVUT/U19P/0tb
        U/9NX1f/NlJG/yBFMP8bQy//KUxD/0FhY/9WcXf/WXV6/1Vyd/9bdHn/VnF1/z1eW/86Vlf/SWZr/0pr
        cP9AaGv/Rmhr/0lsZf9DcWj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>